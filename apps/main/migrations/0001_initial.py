# Generated by Django 3.2.13 on 2022-05-05 01:23

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AntennaCharacteristics',
            fields=[
                ('_id', models.AutoField(auto_created=True, db_column='id', primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', verbose_name='Creation date')),
                ('_updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', verbose_name='Last update date')),
                ('_uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, unique=True)),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Height')),
                ('height_type', models.CharField(blank=True, choices=[('AGL', 'Above Ground Level'), ('AMSL', 'Above Mean Sea Level')], default='AGL', max_length=10, null=True, verbose_name='Height type')),
                ('height_uncertainty', models.FloatField(blank=True, null=True, verbose_name='Height uncertainty')),
            ],
            options={
                'verbose_name': 'Antenna Characteristics',
                'verbose_name_plural': 'Antenna Characteristics',
                'db_table': 'antenna_characteristics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceDescriptor',
            fields=[
                ('_id', models.AutoField(auto_created=True, db_column='id', primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', verbose_name='Creation date')),
                ('_updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', verbose_name='Last update date')),
                ('_uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, unique=True)),
                ('serial_number', models.CharField(blank=True, max_length=64, null=True, verbose_name='Serial number')),
                ('manufacturer_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='Manufacturer Id')),
                ('model_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='Model Id')),
                ('other', models.JSONField(blank=True, default=dict, null=True, verbose_name='Other')),
            ],
            options={
                'verbose_name': 'Device Descriptor',
                'verbose_name_plural': 'Device Descriptors',
                'db_table': 'device_descriptors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceValidity',
            fields=[
                ('_id', models.AutoField(auto_created=True, db_column='id', primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', verbose_name='Creation date')),
                ('_updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', verbose_name='Last update date')),
                ('_uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, unique=True)),
                ('is_valid', models.BooleanField(default=True, verbose_name='Is valid?')),
                ('reason', models.CharField(max_length=128, verbose_name='Reason')),
            ],
            options={
                'verbose_name': 'Device Validity',
                'verbose_name_plural': 'Device Validity',
                'db_table': 'device validity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DbConfiguration',
            fields=[
                ('_id', models.AutoField(auto_created=True, db_column='id', primary_key=True, serialize=False, verbose_name='ID')),
                ('_created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', verbose_name='Creation date')),
                ('_updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', verbose_name='Last update date')),
                ('_uuid', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, unique=True)),
                ('maintenance_mode', models.BooleanField(db_column='maintenance_mode', default=False, verbose_name='Maintenance mode')),
                ('restrict_frequency_to_TV', models.BooleanField(db_column='restrict_frequency_to_TV', default=True, verbose_name='Restrict to TV frequency')),
            ],
            options={
                'verbose_name': 'DB Configuration',
                'verbose_name_plural': 'DB Configurations',
                'db_table': 'db_configurations',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('_created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', verbose_name='Creation date')),
                ('_updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', verbose_name='Last update date')),
                ('code', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(-32768), django.core.validators.MaxValueValidator(32767)], verbose_name='Code')),
                ('message', models.CharField(blank=True, default='', max_length=128, verbose_name='Message')),
                ('data', models.JSONField(blank=True, default=dict, null=True, verbose_name='Data')),
            ],
            options={
                'verbose_name': 'Error',
                'verbose_name_plural': 'Errors',
                'db_table': 'errors',
            },
        ),
    ]
